{\rtf1\ansi\ansicpg1251\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c99985\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \uc0\u1063 \u1090 \u1086  \u1074 \u1099 \u1074 \u1077 \u1076 \u1077 \u1090  \u1082 \u1086 \u1076 ?\
\
m := map[string]int\{"a":1,"b":2,"c":3\}\
\
for a, b := range m \{\
    fmt.Println(a, b)\
\}\
\
\
\uc0\u1063 \u1090 \u1086  \u1074 \u1099 \u1074 \u1077 \u1076 \u1077 \u1090  \u1082 \u1086 \u1076 ? 5 5 5 5 5\
\uc0\u1050 \u1072 \u1082  \u1080 \u1089 \u1087 \u1088 \u1072 \u1074 \u1080 \u1090 \u1100  \u1101 \u1090 \u1086 ?\
\
func main() \{\
    values := []int\{1,2,3,4,5\}\
    for _, val := range values \{\
        go func() \{\
            fmt.Println(val)\
        \}()\
    \}\
    time.Sleep(100 * time.Millisecond)\
\}\
\
// \uc0\u1095 \u1090 \u1086  \u1074 \u1099 \u1074 \u1077 \u1076 \u1077 \u1090  \u1082 \u1086 \u1076 ?\
type X struct \{\
    V int // 123\
\}\
\
func (x X) S() \{\
    fmt.Println(x.V)\
\}\
\
func main() \{\
    x := X\{123\}\
    defer func()\{ \
        x.S() \
    \}()\
    x.V = 456\
\}\
\
\
// \uc0\u1063 \u1090 \u1086  \u1074 \u1099 \u1074 \u1077 \u1076 \u1077 \u1090  \u1082 \u1086 \u1076 ?\
s := "test"\
println(s[0]) \
s[0] = "R" \
println(s)\
\
\
// \uc0\u1063 \u1090 \u1086  \u1074 \u1099 \u1074 \u1077 \u1076 \u1077 \u1090  \u1082 \u1086 \u1076 ?\
func main() \{\
    timeStart := time.Now()\
    _, _ = <-worker(), <-worker()\
    println(int(time.Since(timeStart).Seconds()))\
\}\
\
func worker() chan int \{\
    ch := make(chan int)\
    go func() \{\
        time.Sleep(3 * time.Second)  \
        ch <- 1\
    \}()\
    return ch\
\}\
\
\
// \uc0\u1063 \u1090 \u1086  \u1074 \u1099 \u1074 \u1077 \u1076 \u1077 \u1090  \u1082 \u1086 \u1076 ?\
\
type Foo struct\{\}\
\
func (f *Foo) A() \{\}\
func (f *Foo) B() \{\}\
\
\
type AB interface \{\
    A()\
    B()\
\}\
\
type BC interface \{\
    B()\
    C()\
\}\
\
func main() \{\
    var f AB = &Foo\{\}\
    y := f.(BC) // \uc0\u1089 \u1088 \u1072 \u1073 \u1086 \u1090 \u1072 \u1077 \u1090  \u1083 \u1080  \u1090 \u1072 \u1082 \u1086 \u1081  type-assertion?\
    y.A() // \uc0\u1072  \u1101 \u1090 \u1086 \u1090  \u1074 \u1099 \u1079 \u1086 \u1074 ?\u65279 \
    _ = y\
    \
\}\
\
\
// \uc0\u1053 \u1072 \u1087 \u1080 \u1096 \u1080 \u1090 \u1077  \u1092 \u1091 \u1085 \u1082 \u1094 \u1080 \u1102  \u1082 \u1086 \u1090 \u1086 \u1088 \u1072 \u1103  \u1073 \u1099  \u1074 \u1086 \u1079 \u1074 \u1088 \u1072 \u1097 \u1072 \u1083 \u1072  \u1086 \u1096 \u1080 \u1073 \u1082 \u1091  \u1085 \u1077  \u1080 \u1084 \u1087 \u1086 \u1088 \u1090 \u1080 \u1088 \u1091 \u1103  \u1076 \u1083 \u1103  \u1101 \u1090 \u1086 \u1075 \u1086  \u1085 \u1080 \u1082 \u1072 \u1082 \u1080 \u1093  \u1087 \u1072 \u1082 \u1077 \u1090 \u1086 \u1074 \
\
func main() \{\
    println(handle())\
\}\
\
func handle() \{\
\}\
\
\
// \uc0\u1053 \u1072 \u1087 \u1080 \u1096 \u1080 \u1090 \u1077  \u1092 \u1091 \u1085 \u1082 \u1094 \u1080 \u1102 , \u1082 \u1086 \u1090 \u1086 \u1088 \u1072 \u1103  \u1087 \u1088 \u1086 \u1074 \u1077 \u1088 \u1103 \u1077 \u1090  \u1103 \u1074 \u1083 \u1103 \u1077 \u1090 \u1089 \u1103  \u1083 \u1080  \u1089 \u1083 \u1072 \u1081 \u1089  \u1084 \u1086 \u1085 \u1086 \u1090 \u1086 \u1085 \u1085 \u1099 \u1084 ?\
// \uc0\u1052 \u1086 \u1085 \u1086 \u1090 \u1086 \u1085 \u1085 \u1072 \u1103  \u1092 \u1091 \u1085 \u1082 \u1094 \u1080 \u1103  - \u1092 \u1091 \u1085 \u1082 \u1094 \u1080 \u1103  \u1086 \u1076 \u1085 \u1086 \u1081  \u1087 \u1077 \u1088 \u1077 \u1084 \u1077 \u1085 \u1085 \u1086 \u1081 , \u1086 \u1087 \u1088 \u1077 \u1076 \u1077 \u1083 \u1105 \u1085 \u1085 \u1072 \u1103  \u1085 \u1072  \u1085 \u1077 \u1082 \u1086 \u1090 \u1086 \u1088 \u1086 \u1084  \
// \uc0\u1087 \u1086 \u1076 \u1084 \u1085 \u1086 \u1078 \u1077 \u1089 \u1090 \u1074 \u1077  \u1076 \u1077 \u1081 \u1089 \u1090 \u1074 \u1080 \u1090 \u1077 \u1083 \u1100 \u1085 \u1099 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083 , \u1082 \u1086 \u1090 \u1086 \u1088 \u1072 \u1103  \u1083 \u1080 \u1073 \u1086  \u1074 \u1077 \u1079 \u1076 \u1077  (\u1085 \u1072  \u1086 \u1073 \u1083 \u1072 \u1089 \u1090 \u1080  \u1089 \u1074 \u1086 \u1077 \u1075 \u1086  \u1086 \u1087 \u1088 \u1077 \u1076 \u1077 \u1083 \u1077 \u1085 \u1080 \u1103 ) \
// \uc0\u1085 \u1077  \u1091 \u1073 \u1099 \u1074 \u1072 \u1077 \u1090 , \u1083 \u1080 \u1073 \u1086  \u1074 \u1077 \u1079 \u1076 \u1077  \u1085 \u1077  \u1074 \u1086 \u1079 \u1088 \u1072 \u1089 \u1090 \u1072 \u1077 \u1090 .\
\
\uc0\u1047 \u1072 \u1076 \u1072 \u1095 \u1072  \u1091 \u1078 \u1077  \u1089  \u1088 \u1077 \u1096 \u1077 \u1085 \u1080 \u1077 \u1084 !\
\
    \{1,7\} - true\
    \{1,1\} - true\
    \{3,3,1\} - true\
    \{9,5,1\} - true\
    \{23,5,23\} - false\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\fs26 \cf2 \cb3 func items(s []int) bool \{\
	big := false\
	small := false\
	for i := 1; i < len(s); i++ \{\
		if s[i] > s[i-1] \{\
			big = true\
		\} else if s[i] < s[i-1] \{\
			small = true\
		\}\
		if big && small \{\
			return false\
		\}\
	\}\
	return true\
\}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \cb1 \
\
\
// \uc0\u1058 \u1088 \u1077 \u1073 \u1091 \u1077 \u1090 \u1089 \u1103  \u1088 \u1077 \u1072 \u1083 \u1080 \u1079 \u1086 \u1074 \u1072 \u1090 \u1100  \u1092 \u1091 \u1085 \u1082 \u1094 \u1080 \u1102  uniqRandn, \u1082 \u1086 \u1090 \u1086 \u1088 \u1072 \u1103  \u1075 \u1077 \u1085 \u1077 \u1088 \u1080 \u1088 \u1091 \u1077 \u1090  \u1089 \u1083 \u1072 \u1081 \u1089  \u1076 \u1083 \u1080 \u1085 \u1099  n \u1091 \u1085 \u1080 \u1082 \u1072 \u1083 \u1100 \u1085 \u1099 \u1093 , \u1088 \u1072 \u1085 \u1076 \u1086 \u1084 \u1085 \u1099 \u1093  \u1095 \u1080 \u1089 \u1077 \u1083 .\
\
\uc0\u1059 \u1078 \u1077  \u1089  \u1088 \u1077 \u1096 \u1077 \u1085 \u1080 \u1077 \u1084 !\
\
import (\
    "fmt"\
    "math/rand"\
)\
\
func main() \{\
    fmt.Println(uniqRandn(10))\
\}\
\
func uniqRandn(n int) []int \{\
    m := make(map[int]bool, n)\
    s := make([]int, 0, n)\
    for len(s) < n \{\
        item := rand.Int()\
        if _, ok := m[item]; !ok \{\
            s := append(s, item)\
            m[item] = true\
        \}\
        \
    \}\
    return s\
\}\
\
    \
\
\
// \uc0\u1063 \u1090 \u1086  \u1080 \u1079  \u1089 \u1077 \u1073 \u1103  \u1087 \u1088 \u1077 \u1076 \u1089 \u1090 \u1072 \u1074 \u1083 \u1103 \u1077 \u1090  \u1087 \u1088 \u1086 \u1090 \u1086 \u1082 \u1086 \u1083  HTTP? \u1048 \u1079  \u1082 \u1072 \u1082 \u1080 x \u1086 \u1089 \u1085 \u1086 \u1074 \u1085 \u1099 \u1093  \u1095 \u1072 \u1089 \u1090 \u1077 \u1081  \u1089 \u1086 \u1089 \u1090 \u1086 \u1080 \u1090  HTTP \u1079 \u1072 \u1087 \u1088 \u1086 \u1089  \u1080  HTTP \u1086 \u1090 \u1074 \u1077 \u1090 ?\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}